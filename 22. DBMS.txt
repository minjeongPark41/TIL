DBA

- 데이터베이스 설치해주고 작업해주는 사람

- 제품마다 DBA가 있다. (오라클, .... )

  일반적으로 많은 제품 가지고 가는 사람들은 깊이가 얕다고. 

 

Database Programmer

- DBA가 설정해놓은 환경에서 Data를 관리하는 사람

 

SQL이란? 

- DB를 이용하기 위한 '언어' 

 

DB란?

 

DB 존재 전

- 이때도 데이터를 관리하고 있었다. 

- 도서관은 도서관 데이터만, 행정실은 행정실 데이터만... 

  파일 입출력을 통해 파일에다가 관리했었었지... 

  이게 문제! 

  파일이 문제가 아니라, 도서관 - 행정실이 '같은 데이터'를 중첩해서 관리하는 일이 발생

 


도서관에서도 이 학생이 납입을 했는지 정보가 필요. 

 

전 날 행정실에서 작업 끝난걸 data think?를 떠서 도서관에서 또 일 함.

유재석은 그럼 책을 못빌릴 수도. 오늘 냈는데 오늘 일이 안되어있어서 ㅠ

 

// 

 

만약 홍길동 -> 홍길수로 개명했다고 하면

이전에 홍길동이라고 저장되어있던 자료를 업데이트 못함 (일일히 동명이인 확인해서 다 바꾸지 않는 이상)  

 

수정 시 상이한 데이터가 되버림 

 

-> 해결이 필요해! (그렇지 않으면 '데이터 결함' (오류)이 일어남)

1) 실시간 반영

2) 중복 데이터 없애기

 

-> 그래서 등장한 개념이 '데이터 베이스'! 


네트워크가 각각 연결되어 있어야 함

 


데이터는 '다' 가운데 있는 것! 

 

ㅡㅡㅡㅡㅡ

 

지금 데이터 '공용'으로 쓰게 되서 누군가 마음대로 수정할 수 없음. 

- 수정하는 찰라에 지워진다거나, 누군가 지운걸 찾는다거나 ... '동시성' 문제를 해결해야함

 


 90% 이상이 관계형 DBMS를 사용한다. 

 

누가 작업중일 때는 작업중이라고 말해주고, 손 못대게 해주기 (동시성 문제 해결)

-> 관리자 등장

 

어플리케이션이 '성능'에 대한 걸 요구하기 시작 (언제까지 기다려야해??!)

 

네트워크 참여 컴퓨터가 엄청 많을 것

허락받지 않은 사람이 데이터에 접근하면 안되니, '보안'도 해결해야함

 

이 3가지 문제 해결을 위해 '관리 시스템'을 만듦

- 먼저 온 요청 처리해주기 (나중에 온 애들한테 기다려!)

- 빨리 데이터 찾아오는 성능 문제 해결

- 허락받지 않은 사용자 차단! 

 

DB는 이제 파일로만 있는거고, 우리는 이 '데이터베이스 관리 시스템(DBMS)'을 통해! 사용하는 것

(파일 직접 엑세스 X. 이제 시스템에 명령어 넣어서 주문을 해야함)

 

많은 업체들이 생겼는데, 

많은 파일을 가지고 있는 곳이 오라클(유료 시장에서 50% 이상), MS에서 만든 SQL Server (유료 시장에서 30% 정도)

무료 시장에서는 MySQL (유료+무료 합쳐서 압도적이다. 스타트업에서는 대부분 이거!)

- MySQL보다는 SQL Server가 좋기는 하지만, DBMS 팔면서 windows에서만 돌아가게 해서는... 

- 반면 오라클은 모든 플랫폼에서 다 사용 가능 (window 뿐만 아니라)

- 마이크로소프트 수장(인도 출신 그 분!)이 목표하는 방향이 달라짐. 

  "전향하겠다." (오픈소스화도 많이 하고, window에서만 돌아가게 하지 않게 전향 중)

  근데 때가 많이 지나서ㅠ 세간의 관심 하락... 과거의 MS 명성을 지금은 구글이 가지고 감. (구글에서 뭘 내놓으면 다 기사화) 

 

이 3가지를 다루면 DBMS 다 커버 가능하다. 

Oracle 이후 MySQL. (선생님은 SQL Server를 좋아하신다고 함)  

- 요새는 My SQL 대체재로 Maria DB? 등장

  My SQL 무료였는데 오라클이 인수.

  문제는 유료화 안한댔는데, 유료화하기 시작함. (조금이라도 고쳐쓰면 돈 내도록 함)

-> My SQL 개발자가 그 이야기를 듣고 회사 다시 차림ㅋㅋㅋㅋ 그게 Maria DB

    그대로! 호환성 100% 가능하도록

-> 그래서 구글이든 위키피디아든 Maria DB로 감 ㅎㅎㅎ 

ㅡㅡㅡㅡㅡ

DataBase - 이게 '중복'의 의미를 가진다고. 

DBMS

- 가장 큰 장점은 '무결성'

- 관리하는 '녀석'임

- 왜 DB를 직접! 관리하지 않고 DBMS를 활용할까. 

1. 누가 작업중일 때는 작업중이라고 말해주고, 손 못대게 해주기 (동시성 문제 해결) -> 관리자 등장

2. 어플리케이션이 '성능'에 대한 걸 요구하기 시작 (언제까지 기다려야해??!)

3. 허락받지 않은 사람이 데이터에 접근하면 안되니, '보안'도 해결해야함

SQL

// 

 

1. 이 데이터 학생거야! 

명령어 3가지 

DDL : create, alter, drop

 

2. 조작 명령어 (이제 학생거라는거 알았으니 조작을 해보자~) 

DML : select, insert, update, delete

 

3. 컨트롤 랭귀지

DCL : grant ,revoke

 

// 이게 명령어의 전부. 9개만 외우면 된다! 

문제는 9개가 옵션ㅜ을 많이 가지고 있다~ 