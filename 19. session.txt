문제 상황
1. 

로그인할 때, 사용자가 입력하는 id, password를 db에 기억하고 있다가 같으면 로그인  X

-> db가 해킹 당하면 전부 유출되는 문제가 존재.  

 

2.

페이지를 들어갈 때마다 로그인 상태를 '유지' 시켜주는 문제

 

So, 인증, 인가가 중요

- 인증 : Authentication (로그인)

- 인가 : Authorization (로그인이 유지되는 상태에서 일어나는 것) 

 

Authorization 전통적인 방식 - session
1. 사용자가 로그인에 성공하면 '서버'는 '세션 딱지'같은 걸 출력한다. 
  이 딱지를 찢어서 반쪽은 '사용자의 브라우저'로, 반쪽은 '메모리, db ... ' 등 에 저장함. 

  (메모리에 저장하는게 다른 저장 공간보다는 빠르게 처리해준다.)

2. 브라우저가 이 딱지를 session ID란 이름의 쿠키로 저장 (쿠키 : 브라우저에 저장되는 정보)

    이 브라우저는 다음 사이트에 요청을 보낼때마다 이 딱지를 실어 보냄. 

3. 요청에 session ID라는게 들어오면 -> 서버는 메모리에서 맞는 짝이 있는지를 찾는 것 

 

어떤 사용자가 서버에 로그인 되어있음이 지속되는 상태를 '세션'이라고 함

- 서버가 표 반쪽을 기억해두고 있는 자체

 

허점
- 사용자가 동시에 많이 접속하면 메모리가 부족해질 것
   -> 메모리 특성상 서버에 문제가 있어서 꺼져버리기라도 하면 정보가 날라감 (휘발성)
        사용자는 다시 로그인해야하는 상황이 발생

- 메모리 대신 하드에 저장을 하면? 메모리보다 느리다.

- 서버를 여러대 둔다면? (서버를 분산해서 load balancing)

   만약에 로그인은 1번 서버, 검색 요청하는 서버는 2번 서버에 연결을 하면 2번 서버에는 그 사용자에 대한 정보(딱지)가 없으니 세션 유지가 되지 않음. 

- 복잡한 구성과 환경에서 (사용자가 많아져서 메모리가 부족해진다던지, db에 연결을 하면 무거워진다던지) 어떤 상태를 기억해야한다는 설계가 힘듦 